"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ts-invariant";
exports.ids = ["vendor-chunks/ts-invariant"];
exports.modules = {

/***/ "(ssr)/./node_modules/ts-invariant/lib/invariant.js":
/*!****************************************************!*\
  !*** ./node_modules/ts-invariant/lib/invariant.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvariantError: () => (/* binding */ InvariantError),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   invariant: () => (/* binding */ invariant),\n/* harmony export */   setVerbosity: () => (/* binding */ setVerbosity)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/tslib/tslib.es6.mjs\");\n\nvar genericMessage = \"Invariant Violation\";\nvar _a = Object.setPrototypeOf, setPrototypeOf = _a === void 0 ? function(obj, proto) {\n    obj.__proto__ = proto;\n    return obj;\n} : _a;\nvar InvariantError = /** @class */ function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(InvariantError, _super);\n    function InvariantError(message) {\n        if (message === void 0) {\n            message = genericMessage;\n        }\n        var _this = _super.call(this, typeof message === \"number\" ? genericMessage + \": \" + message + \" (see https://github.com/apollographql/invariant-packages)\" : message) || this;\n        _this.framesToPop = 1;\n        _this.name = genericMessage;\n        setPrototypeOf(_this, InvariantError.prototype);\n        return _this;\n    }\n    return InvariantError;\n}(Error);\n\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new InvariantError(message);\n    }\n}\nvar verbosityLevels = [\n    \"debug\",\n    \"log\",\n    \"warn\",\n    \"error\",\n    \"silent\"\n];\nvar verbosityLevel = verbosityLevels.indexOf(\"log\");\nfunction wrapConsoleMethod(name) {\n    return function() {\n        if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n            // Default to console.log if this host environment happens not to provide\n            // all the console.* methods we need.\n            var method = console[name] || console.log;\n            return method.apply(console, arguments);\n        }\n    };\n}\n(function(invariant) {\n    invariant.debug = wrapConsoleMethod(\"debug\");\n    invariant.log = wrapConsoleMethod(\"log\");\n    invariant.warn = wrapConsoleMethod(\"warn\");\n    invariant.error = wrapConsoleMethod(\"error\");\n})(invariant || (invariant = {}));\nfunction setVerbosity(level) {\n    var old = verbosityLevels[verbosityLevel];\n    verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n    return old;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (invariant); //# sourceMappingURL=invariant.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdHMtaW52YXJpYW50L2xpYi9pbnZhcmlhbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBa0M7QUFDbEMsSUFBSUMsaUJBQWlCO0FBQ3JCLElBQUlDLEtBQUtDLE9BQU9DLGNBQWMsRUFBRUEsaUJBQWlCRixPQUFPLEtBQUssSUFBSSxTQUFVRyxHQUFHLEVBQUVDLEtBQUs7SUFDakZELElBQUlFLFNBQVMsR0FBR0Q7SUFDaEIsT0FBT0Q7QUFDWCxJQUFJSDtBQUNKLElBQUlNLGlCQUFpQixXQUFXLEdBQUksU0FBVUMsTUFBTTtJQUNoRFQsZ0RBQVNBLENBQUNRLGdCQUFnQkM7SUFDMUIsU0FBU0QsZUFBZUUsT0FBTztRQUMzQixJQUFJQSxZQUFZLEtBQUssR0FBRztZQUFFQSxVQUFVVDtRQUFnQjtRQUNwRCxJQUFJVSxRQUFRRixPQUFPRyxJQUFJLENBQUMsSUFBSSxFQUFFLE9BQU9GLFlBQVksV0FDM0NULGlCQUFpQixPQUFPUyxVQUFVLCtEQUNsQ0EsWUFBWSxJQUFJO1FBQ3RCQyxNQUFNRSxXQUFXLEdBQUc7UUFDcEJGLE1BQU1HLElBQUksR0FBR2I7UUFDYkcsZUFBZU8sT0FBT0gsZUFBZU8sU0FBUztRQUM5QyxPQUFPSjtJQUNYO0lBQ0EsT0FBT0g7QUFDWCxFQUFFUTtBQUN3QjtBQUNuQixTQUFTQyxVQUFVQyxTQUFTLEVBQUVSLE9BQU87SUFDeEMsSUFBSSxDQUFDUSxXQUFXO1FBQ1osTUFBTSxJQUFJVixlQUFlRTtJQUM3QjtBQUNKO0FBQ0EsSUFBSVMsa0JBQWtCO0lBQUM7SUFBUztJQUFPO0lBQVE7SUFBUztDQUFTO0FBQ2pFLElBQUlDLGlCQUFpQkQsZ0JBQWdCRSxPQUFPLENBQUM7QUFDN0MsU0FBU0Msa0JBQWtCUixJQUFJO0lBQzNCLE9BQU87UUFDSCxJQUFJSyxnQkFBZ0JFLE9BQU8sQ0FBQ1AsU0FBU00sZ0JBQWdCO1lBQ2pELHlFQUF5RTtZQUN6RSxxQ0FBcUM7WUFDckMsSUFBSUcsU0FBU0MsT0FBTyxDQUFDVixLQUFLLElBQUlVLFFBQVFDLEdBQUc7WUFDekMsT0FBT0YsT0FBT0csS0FBSyxDQUFDRixTQUFTRztRQUNqQztJQUNKO0FBQ0o7QUFDQyxVQUFVVixTQUFTO0lBQ2hCQSxVQUFVVyxLQUFLLEdBQUdOLGtCQUFrQjtJQUNwQ0wsVUFBVVEsR0FBRyxHQUFHSCxrQkFBa0I7SUFDbENMLFVBQVVZLElBQUksR0FBR1Asa0JBQWtCO0lBQ25DTCxVQUFVYSxLQUFLLEdBQUdSLGtCQUFrQjtBQUN4QyxHQUFHTCxhQUFjQSxDQUFBQSxZQUFZLENBQUM7QUFDdkIsU0FBU2MsYUFBYUMsS0FBSztJQUM5QixJQUFJQyxNQUFNZCxlQUFlLENBQUNDLGVBQWU7SUFDekNBLGlCQUFpQmMsS0FBS0MsR0FBRyxDQUFDLEdBQUdoQixnQkFBZ0JFLE9BQU8sQ0FBQ1c7SUFDckQsT0FBT0M7QUFDWDtBQUNBLGlFQUFlaEIsU0FBU0EsRUFBQyxDQUN6QixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tdWx0aWxpbmd1YWwtYmxvZy8uL25vZGVfbW9kdWxlcy90cy1pbnZhcmlhbnQvbGliL2ludmFyaWFudC5qcz83NjgyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9fZXh0ZW5kcyB9IGZyb20gXCJ0c2xpYlwiO1xudmFyIGdlbmVyaWNNZXNzYWdlID0gXCJJbnZhcmlhbnQgVmlvbGF0aW9uXCI7XG52YXIgX2EgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YsIHNldFByb3RvdHlwZU9mID0gX2EgPT09IHZvaWQgMCA/IGZ1bmN0aW9uIChvYmosIHByb3RvKSB7XG4gICAgb2JqLl9fcHJvdG9fXyA9IHByb3RvO1xuICAgIHJldHVybiBvYmo7XG59IDogX2E7XG52YXIgSW52YXJpYW50RXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKEludmFyaWFudEVycm9yLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEludmFyaWFudEVycm9yKG1lc3NhZ2UpIHtcbiAgICAgICAgaWYgKG1lc3NhZ2UgPT09IHZvaWQgMCkgeyBtZXNzYWdlID0gZ2VuZXJpY01lc3NhZ2U7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgdHlwZW9mIG1lc3NhZ2UgPT09IFwibnVtYmVyXCJcbiAgICAgICAgICAgID8gZ2VuZXJpY01lc3NhZ2UgKyBcIjogXCIgKyBtZXNzYWdlICsgXCIgKHNlZSBodHRwczovL2dpdGh1Yi5jb20vYXBvbGxvZ3JhcGhxbC9pbnZhcmlhbnQtcGFja2FnZXMpXCJcbiAgICAgICAgICAgIDogbWVzc2FnZSkgfHwgdGhpcztcbiAgICAgICAgX3RoaXMuZnJhbWVzVG9Qb3AgPSAxO1xuICAgICAgICBfdGhpcy5uYW1lID0gZ2VuZXJpY01lc3NhZ2U7XG4gICAgICAgIHNldFByb3RvdHlwZU9mKF90aGlzLCBJbnZhcmlhbnRFcnJvci5wcm90b3R5cGUpO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIHJldHVybiBJbnZhcmlhbnRFcnJvcjtcbn0oRXJyb3IpKTtcbmV4cG9ydCB7IEludmFyaWFudEVycm9yIH07XG5leHBvcnQgZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBJbnZhcmlhbnRFcnJvcihtZXNzYWdlKTtcbiAgICB9XG59XG52YXIgdmVyYm9zaXR5TGV2ZWxzID0gW1wiZGVidWdcIiwgXCJsb2dcIiwgXCJ3YXJuXCIsIFwiZXJyb3JcIiwgXCJzaWxlbnRcIl07XG52YXIgdmVyYm9zaXR5TGV2ZWwgPSB2ZXJib3NpdHlMZXZlbHMuaW5kZXhPZihcImxvZ1wiKTtcbmZ1bmN0aW9uIHdyYXBDb25zb2xlTWV0aG9kKG5hbWUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodmVyYm9zaXR5TGV2ZWxzLmluZGV4T2YobmFtZSkgPj0gdmVyYm9zaXR5TGV2ZWwpIHtcbiAgICAgICAgICAgIC8vIERlZmF1bHQgdG8gY29uc29sZS5sb2cgaWYgdGhpcyBob3N0IGVudmlyb25tZW50IGhhcHBlbnMgbm90IHRvIHByb3ZpZGVcbiAgICAgICAgICAgIC8vIGFsbCB0aGUgY29uc29sZS4qIG1ldGhvZHMgd2UgbmVlZC5cbiAgICAgICAgICAgIHZhciBtZXRob2QgPSBjb25zb2xlW25hbWVdIHx8IGNvbnNvbGUubG9nO1xuICAgICAgICAgICAgcmV0dXJuIG1ldGhvZC5hcHBseShjb25zb2xlLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgfTtcbn1cbihmdW5jdGlvbiAoaW52YXJpYW50KSB7XG4gICAgaW52YXJpYW50LmRlYnVnID0gd3JhcENvbnNvbGVNZXRob2QoXCJkZWJ1Z1wiKTtcbiAgICBpbnZhcmlhbnQubG9nID0gd3JhcENvbnNvbGVNZXRob2QoXCJsb2dcIik7XG4gICAgaW52YXJpYW50Lndhcm4gPSB3cmFwQ29uc29sZU1ldGhvZChcIndhcm5cIik7XG4gICAgaW52YXJpYW50LmVycm9yID0gd3JhcENvbnNvbGVNZXRob2QoXCJlcnJvclwiKTtcbn0pKGludmFyaWFudCB8fCAoaW52YXJpYW50ID0ge30pKTtcbmV4cG9ydCBmdW5jdGlvbiBzZXRWZXJib3NpdHkobGV2ZWwpIHtcbiAgICB2YXIgb2xkID0gdmVyYm9zaXR5TGV2ZWxzW3ZlcmJvc2l0eUxldmVsXTtcbiAgICB2ZXJib3NpdHlMZXZlbCA9IE1hdGgubWF4KDAsIHZlcmJvc2l0eUxldmVscy5pbmRleE9mKGxldmVsKSk7XG4gICAgcmV0dXJuIG9sZDtcbn1cbmV4cG9ydCBkZWZhdWx0IGludmFyaWFudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludmFyaWFudC5qcy5tYXAiXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZ2VuZXJpY01lc3NhZ2UiLCJfYSIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwib2JqIiwicHJvdG8iLCJfX3Byb3RvX18iLCJJbnZhcmlhbnRFcnJvciIsIl9zdXBlciIsIm1lc3NhZ2UiLCJfdGhpcyIsImNhbGwiLCJmcmFtZXNUb1BvcCIsIm5hbWUiLCJwcm90b3R5cGUiLCJFcnJvciIsImludmFyaWFudCIsImNvbmRpdGlvbiIsInZlcmJvc2l0eUxldmVscyIsInZlcmJvc2l0eUxldmVsIiwiaW5kZXhPZiIsIndyYXBDb25zb2xlTWV0aG9kIiwibWV0aG9kIiwiY29uc29sZSIsImxvZyIsImFwcGx5IiwiYXJndW1lbnRzIiwiZGVidWciLCJ3YXJuIiwiZXJyb3IiLCJzZXRWZXJib3NpdHkiLCJsZXZlbCIsIm9sZCIsIk1hdGgiLCJtYXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ts-invariant/lib/invariant.js\n");

/***/ })

};
;